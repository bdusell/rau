# This workflow will upload a Python Package to PyPI when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

name: Upload Python Package to PyPI

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  release-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Install Poetry
        run: pipx install poetry==2.1.3
      # See https://github.com/actions/setup-python/blob/main/docs/advanced-usage.md#caching-packages
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11.12"
          cache: poetry
      - name: Set package version
        run: |
          ref=${{ github.ref }}
          echo "ref: $ref"
          [[ $ref =~ ^refs/tags/v(.+)$ ]]
          version=${BASH_REMATCH[1]}
          echo "version: $version"
          poetry version "$version"
      - name: Install Python packages
        run: bash scripts/install_python_packages.bash
      - name: Run unit tests
        run: bash scripts/run_tests.bash
      - name: Build release distributions
        run: poetry build
      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write

    # Dedicated environments with protections for publishing are strongly recommended.
    # For more information, see: https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment#deployment-protection-rules
    environment:
      name: pypi
      # Include the PyPI project URL in the deployment status:
      url: https://pypi.org/p/rau

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
          verbose: true
